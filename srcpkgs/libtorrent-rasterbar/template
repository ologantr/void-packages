# Template file for 'libtorrent-rasterbar'
# Breaks ABI/API without changing soname, revbump all dependants
pkgname=libtorrent-rasterbar
version=2.0.6
revision=1
build_style=cmake
configure_args="-DCMAKE_CXX_STANDARD=14 -Dbuild_examples=ON -Dbuild_tools=ON
 -Dpython-bindings=ON"
hostmakedepends="pkg-config intltool libtool python3-devel"
makedepends="openssl-devel boost-devel geoip-devel python3-devel"
short_desc="C++ bittorrent library by Rasterbar Software"
maintainer="Orphaned <orphan@voidlinux.org>"
license="BSD-3-Clause"
homepage="https://libtorrent.org/"
distfiles="https://github.com/arvidn/libtorrent/releases/download/v${version}/${pkgname}-${version}.tar.gz"
checksum=438e29272ff41ccc68ec7530f1b98d639f6d01ec8bf680766336ae202a065722

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	makedepends+=" libatomic-devel"
fi

case "$XBPS_TARGET_MACHINE" in
	i686*) make_check=no # tests fail to compile on 32bit
	;;
	*) [ "$XBPS_CHECK_PKGS" ] && configure_args+=" -Dbuild_tests=ON"
	;;
esac

do_check() {
	# taken from alpine
	local tests_to_skip="test_upnp|test_flags|test_remove_torrent|test_privacy"

	# broken, for now
	tests_to_skip="$tests_to_skip|test_create_torrent"

	# test_copy_file fails on x86_64* CI
	case "$XBPS_TARGET_MACHINE" in
		x86_64*) tests_to_skip="$tests_to_skip|test_url_seed|test_session_params|test_copy_file" ;;
		*) ;;
	esac

	export CTEST_PARALLEL_LEVEL="$XBPS_MAKEJOBS"
	ctest --output-on-failure --test-dir build --exclude-regex "$tests_to_skip"
}

pre_configure() {
	if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
		vsed -i CMakeLists.txt -e "s;Threads::Threads;& atomic;"
	fi
}

post_install() {
	local f

	# Install examples. They are not installed with make install :P
	for f in client_test connection_tester dump_torrent simple_client upnp_test \
		custom_storage make_torrent stats_counters; do
		vbin ${wrksrc}/build/examples/${f}
	done
	vlicense LICENSE
}

libtorrent-rasterbar-python3_package() {
	lib32disabled=yes
	short_desc+=" - Python3 bindings"
	pkg_install() {
		vmove "usr/lib/python3*"
	}
}

libtorrent-rasterbar-devel_package() {
	depends="${sourcepkg}>=${version}_${revision} openssl-devel boost-devel geoip-devel"
	if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
		depends+=" libatomic-devel"
	fi
	short_desc+=" - development files"
	pkg_install() {
		vmove usr/include
		vmove usr/share/cmake
		vmove usr/lib/pkgconfig
		vmove "usr/lib/*.so"
	}
}

libtorrent-rasterbar-examples_package() {
	short_desc+=" - example binaries"
	pkg_install() {
		vmove usr/bin
	}
}
